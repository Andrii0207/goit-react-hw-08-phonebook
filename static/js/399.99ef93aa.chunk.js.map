{"version":3,"file":"static/js/399.99ef93aa.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/PhoneBook.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilteredContacts = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\n// export const selectSortedContacts = state => {\n//   const contacts = selectContacts(state);\n\n//   console.log('selectSortedContacts123', contacts);\n//   [...contacts].sort((a, b) => a.name.localeCompare(b.name));\n// };\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 250px;\n  align-items: center;\n  margin-top: 70px;\n`;\n\nexport const InputDataWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  margin: 0;\n`;\n\nexport const AddContactBtn = styled.button`\n  display: block;\n  width: 450px;\n  height: 40px;\n  border-radius: 5px;\n  color: aliceblue;\n  font-size: 20px;\n  font-weight: 600;\n  background-color: rgb(167, 167, 167);\n  margin-top: 20px;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(246, 187, 99);\n    color: black;\n    scale: 1.05;\n  }\n`;\n\nexport const LabelName = styled.label`\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n`;\n\nexport const InputName = styled.p`\n  font-size: 15px;\n  font-weight: 300;\n  font-style: italic;\n  margin: 5px 5px;\n\n  /* display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  font-size: 15px;\n  font-weight: 300;\n  font-style: italic; */\n`;\n\nexport const InputData = styled.input`\n  width: 200px;\n  height: 30px;\n`;\n","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  AddContactBtn,\n  FormWrapper,\n  InputData,\n  InputDataWrapper,\n  InputName,\n  LabelName,\n} from './ContactForm.styled';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\nconst ContactForm = () => {\n  const [state, setState] = useState(initialState);\n  const contacts = useSelector(selectContacts);\n\n  const contactId = nanoid();\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    setState(prev => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const { name, number } = state;\n\n    const newName = evt.target.elements.name.value;\n\n    contacts.find(item => item.name.toLowerCase() === newName.toLowerCase())\n      ? Notiflix.Notify.info(`${newName} is already in contacts`)\n      : dispatch(addContact({ name, number })) &&\n        Notiflix.Notify.success(`${newName} has added to your phonebook`);\n\n    setState(initialState);\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <InputDataWrapper>\n        <LabelName htmlFor={contactId}>\n          <InputName>Name</InputName>\n          <InputData\n            onChange={handleChange}\n            value={state.name}\n            type=\"text\"\n            name=\"name\"\n            id={contactId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </LabelName>\n        <LabelName htmlFor={contactId}>\n          <InputName>Number</InputName>\n          <InputData\n            onChange={handleChange}\n            value={state.number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </LabelName>\n      </InputDataWrapper>\n      <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n    </FormWrapper>\n  );\n};\n\nexport default ContactForm;\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"45\"\n      visible={true}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactWrapper\":\"ContactList_contactWrapper__aynku\",\"deleteContactBtn\":\"ContactList_deleteContactBtn__PWCBT\",\"contactData\":\"ContactList_contactData__uzh2k\",\"contactDataWrapper\":\"ContactList_contactDataWrapper__Ogoqn\",\"listContact\":\"ContactList_listContact__gg2c1\"};","/* eslint-disable array-callback-return */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { GrClose } from 'react-icons/gr';\nimport { Loader } from 'components/Loader/Loader';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport css from './ContactList.module.css';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const filterState = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  console.log(contacts);\n\n  const sortedContacts = [...contacts].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  const filteredContacts = () => {\n    if (!filterState) {\n      return sortedContacts;\n    }\n    return sortedContacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterState.toLowerCase())\n    );\n  };\n\n  return (\n    <ul className={css.listContact}>\n      {isLoading && <Loader />}\n      {filteredContacts().length === 0 && <p>You haven't found any contacts</p>}\n      {filteredContacts().map(({ id, name, number }) => {\n        return (\n          <li key={id} className={css.contactWrapper}>\n            <p className={css.contactData}>\n              {name} : {number}\n            </p>\n            <button\n              className={css.deleteContactBtn}\n              type=\"button\"\n              onClick={() =>\n                dispatch(deleteContact(id))\n                  .unwrap()\n                  .then(({ name, id }) => {\n                    Notiflix.Notify.warning(\n                      `${name} was deleted from contacts`\n                    );\n                  })\n                  .catch(rejectedValueOrSerializedError => {\n                    console.log(rejectedValueOrSerializedError);\n                  })\n              }\n            >\n              <GrClose style={{ width: '40px' }} />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputData\":\"Filter_inputData__rH91b\",\"inputName\":\"Filter_inputName__snXo9\",\"filterWripper\":\"Filter_filterWripper__P8Cya\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <div className={css.filterWripper}>\n      <p className={css.inputName}>Find contacts by name</p>\n      <input\n        className={css.inputData}\n        type=\"text\"\n        name=\"filter\"\n        value={filterContacts}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst PhoneBook = () => {\n  return (\n    <div>\n      <br />\n      <ContactForm />\n      <br />\n      <Filter />\n      <br />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["selectContacts","state","contacts","items","selectFilteredContacts","filter","selectIsLoading","isLoading","FormWrapper","styled","InputDataWrapper","AddContactBtn","LabelName","InputName","InputData","initialState","name","number","useState","setState","useSelector","contactId","nanoid","dispatch","useDispatch","handleChange","evt","target","value","prev","onSubmit","preventDefault","newName","elements","find","item","toLowerCase","Notiflix","addContact","htmlFor","onChange","type","id","pattern","title","required","Loader","strokeColor","strokeWidth","animationDuration","width","visible","filterState","useEffect","fetchContacts","console","log","sortedContacts","sort","a","b","localeCompare","filteredContacts","contact","includes","className","css","length","map","onClick","deleteContact","unwrap","then","catch","rejectedValueOrSerializedError","style","filterContacts","e","setFilter"],"sourceRoot":""}